---
styles:
  styles.css
format:
  html:
    title: 'Project'
    toc: true
    toc-depth: 6
    toc-title: Contents
    toc-location: left
    toc-expand: 5
    smooth-scroll: true
    anchor-sections: true
    include-after-body: abbrv_toc.html
    number-sections: true
---

![](sql.gif){style="text-align: center" fig-align="center" width="437"}

## EMU Hacettepe Internship Informing & Feedback System

### Teaser Trailer

{{< video dataciphers.mp4 >}}

### Objective

::: {style="text-align: justify;"}
Our database aims to facilitate the process of selecting and finding companies for internships for students of Industrial Engineering at Hacettepe University. To achieve this, we gather data and evaluations from students who have previously completed their internships at these companies. The information in our database allows students to know what they can expect to experience and what to expect within the opportunities provided by these companies. In addition to evaluations, our database also includes information about the application process for internship programs offered by relevant companies.
:::

### Application Features

::: {style="text-align: justify;"}
-   **Company Search:** Users can search for companies offering internships based on various criteria such as location, industry, duration, and specific requirements.

-   **Student Evaluation System:** A platform where students can provide feedback and evaluations on their internship experiences, including ratings for different aspects such as work environment, mentor-ship, learning opportunities, and overall satisfaction.

-   **Company Profiles:** Detailed profiles for each company, including information about their internship programs, requirements, past interns' experiences, and any additional benefits offered.

-   **Internship Opportunities:** A section dedicated to listing current internship opportunities available at different companies, with details on application websites, requirements, and how to apply.

-   **Analytics and Insights:** Data analytics features to provide insights and trends based on the evaluations and feedback collected from students, helping to identify top-rated companies, popular internship programs, and areas for improvement.
:::

### Relations (Tables) and Their Attributes as an Initial Design

1.  **Student**

    -   student_id (Primary Key)
    -   first_name
    -   last_name
    -   email
    -   join_year
    -   gpa

```{r message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"

library(RMySQL)
library(readr)
library(dplyr)
library(knitr)
library(lubridate)

# Set up the connection parameters
db_host <- "127.0.0.1"  # Localhost address
db_user <- "root"  # Your MySQL username
db_password <- ""  # Your MySQL password
db_name <- "emu415_ciphers"  # The name of your database

# Establish the connection
db_connection <- dbConnect(RMySQL::MySQL(), 
                           host = db_host,
                           user = db_user,
                           password = db_password,
                           dbname = db_name)
# Define the SQL query
sql_query <- "SELECT first_name, last_name, email, join_year FROM students ORDER BY first_name;"

# Execute the SQL query and retrieve the results
results <- dbGetQuery(db_connection, sql_query)

# Display the results
kable(head(results, 10))
```

2.  **Company**

    -   company_id (Primary Key)
    -   company_name
    -   industry
    -   location
    -   contact_info
    -   website

```{r message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"

# Define the SQL query
sql_query <- "SELECT company_id, company_name, industry, location, contact_info FROM companies;"

# Execute the SQL query and retrieve the results
results <- dbGetQuery(db_connection, sql_query)

# Display the results
kable(head(results, 10))

```

3.  **Internship**

    -   internship_id (Primary Key)
    -   student_id (Foreign Key)
    -   company_id (Foreign Key)
    -   intern_type
    -   department
    -   year
    -   start_date
    -   end_date
    -   duration
    -   income
    -   working_hours
    -   transportation_status

```{r message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"

# Define the SQL query
sql_query <- "SELECT internship_id, student_id, company_id, intern_type, department, start_date, end_date FROM internships;"

# Execute the SQL query and retrieve the results
results <- dbGetQuery(db_connection, sql_query)

# Display the results
kable(head(results, 10))
```

4.  **Rating**

    -   rating_id (Primary Key)
    -   internship_id (Foreign Key)
    -   transportation_rating
    -   work_env_rating
    -   learning_opp_rating
    -   food_rating
    -   hr_rating
    -   mentor_rating
    -   comment

```{r message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"

# Define the SQL query
sql_query <- "SELECT rating_id, transportation_rating, work_env_rating, learning_opp_rating, food_rating, hr_rating, mentor_rating FROM ratings;"

# Execute the SQL query and retrieve the results
results <- dbGetQuery(db_connection, sql_query)

# Display the results
kable(head(results, 10))
```

### Relationships

::: {style="text-align: justify;"}
-   **internships belongs to company:** One-to-many relationship, each company can offer multiple internships, but each internship is associated with only one company.

-   **internship belongs to student**: One-to-many relationship, one student can have multiple internships, but each internship is associated with only one student.

-   **rating belongs to internship:** One-to-one relationship, each internship has one rating, and each rating is associated with only one internship.

-   **student to rating through internship:** One-to-many relationship, each student can have many ratings as well as internships, but each rating can only have one student and one internship.

-   **company to rating through internship:** One to many relationship, each company can have many ratings as well as internships, but each rating can only have one company and one internship.
:::

### Entity-Relationship Diagram

![](eer_diagram.png){fig-align="center"}

### Schema Design

![](schema_design.png){fig-align="center"}
